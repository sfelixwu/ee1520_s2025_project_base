/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_EE1520BUSCLIENT_H_
#define JSONRPC_CPP_STUB_EE1520BUSCLIENT_H_

#include <jsonrpccpp/client.h>

class ee1520BUSClient : public jsonrpc::Client
{
    public:
        ee1520BUSClient(jsonrpc::IClientConnector &conn, jsonrpc::clientVersion_t type = jsonrpc::JSONRPC_CLIENT_V2) : jsonrpc::Client(conn, type) {}

        Json::Value dumpAll(const std::string& action) 
        {
            Json::Value p;
            p["action"] = action;
            Json::Value result = this->CallMethod("dumpAll",p);
            if (result.isObject())
                return result;
            else
                throw jsonrpc::JsonRpcException(jsonrpc::Errors::ERROR_CLIENT_INVALID_RESPONSE, result.toStyledString());
        }
        Json::Value move(const std::string& action, const Json::Value& object) 
        {
            Json::Value p;
            p["action"] = action;
            p["object"] = object;
            Json::Value result = this->CallMethod("move",p);
            if (result.isObject())
                return result;
            else
                throw jsonrpc::JsonRpcException(jsonrpc::Errors::ERROR_CLIENT_INVALID_RESPONSE, result.toStyledString());
        }
        Json::Value associate(const std::string& action, const Json::Value& guest, const Json::Value& host) 
        {
            Json::Value p;
            p["action"] = action;
            p["guest"] = guest;
            p["host"] = host;
            Json::Value result = this->CallMethod("associate",p);
            if (result.isObject())
                return result;
            else
                throw jsonrpc::JsonRpcException(jsonrpc::Errors::ERROR_CLIENT_INVALID_RESPONSE, result.toStyledString());
        }
        Json::Value disassociate(const std::string& action, const Json::Value& guest, const Json::Value& host) 
        {
            Json::Value p;
            p["action"] = action;
            p["guest"] = guest;
            p["host"] = host;
            Json::Value result = this->CallMethod("disassociate",p);
            if (result.isObject())
                return result;
            else
                throw jsonrpc::JsonRpcException(jsonrpc::Errors::ERROR_CLIENT_INVALID_RESPONSE, result.toStyledString());
        }
        Json::Value dump2JSON(const std::string& action, const std::string& class, const std::string& object) 
        {
            Json::Value p;
            p["action"] = action;
            p["class"] = class;
            p["object"] = object;
            Json::Value result = this->CallMethod("dump2JSON",p);
            if (result.isObject())
                return result;
            else
                throw jsonrpc::JsonRpcException(jsonrpc::Errors::ERROR_CLIENT_INVALID_RESPONSE, result.toStyledString());
        }
};

#endif //JSONRPC_CPP_STUB_EE1520BUSCLIENT_H_
