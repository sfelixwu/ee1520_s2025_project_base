/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_EE1520BUSSERVER_H_
#define JSONRPC_CPP_STUB_EE1520BUSSERVER_H_

#include <jsonrpccpp/server.h>

class ee1520BUSServer : public jsonrpc::AbstractServer<ee1520BUSServer>
{
    public:
        ee1520BUSServer(jsonrpc::AbstractServerConnector &conn, jsonrpc::serverVersion_t type = jsonrpc::JSONRPC_SERVER_V2) : jsonrpc::AbstractServer<ee1520BUSServer>(conn, type)
        {
            this->bindAndAddMethod(jsonrpc::Procedure("dumpAll", jsonrpc::PARAMS_BY_NAME, jsonrpc::JSON_OBJECT, "action",jsonrpc::JSON_STRING, NULL), &ee1520BUSServer::dumpAllI);
            this->bindAndAddMethod(jsonrpc::Procedure("move", jsonrpc::PARAMS_BY_NAME, jsonrpc::JSON_OBJECT, "action",jsonrpc::JSON_STRING,"object",jsonrpc::JSON_OBJECT, NULL), &ee1520BUSServer::moveI);
            this->bindAndAddMethod(jsonrpc::Procedure("associate", jsonrpc::PARAMS_BY_NAME, jsonrpc::JSON_OBJECT, "action",jsonrpc::JSON_STRING,"guest",jsonrpc::JSON_OBJECT,"host",jsonrpc::JSON_OBJECT, NULL), &ee1520BUSServer::associateI);
            this->bindAndAddMethod(jsonrpc::Procedure("disassociate", jsonrpc::PARAMS_BY_NAME, jsonrpc::JSON_OBJECT, "action",jsonrpc::JSON_STRING,"guest",jsonrpc::JSON_OBJECT,"host",jsonrpc::JSON_OBJECT, NULL), &ee1520BUSServer::disassociateI);
            this->bindAndAddMethod(jsonrpc::Procedure("dump2JSON", jsonrpc::PARAMS_BY_NAME, jsonrpc::JSON_OBJECT, "action",jsonrpc::JSON_STRING,"class",jsonrpc::JSON_STRING,"object",jsonrpc::JSON_STRING, NULL), &ee1520BUSServer::dump2JSONI);
        }

        inline virtual void dumpAllI(const Json::Value &request, Json::Value &response)
        {
            response = this->dumpAll(request["action"].asString());
        }
        inline virtual void moveI(const Json::Value &request, Json::Value &response)
        {
            response = this->move(request["action"].asString(), request["object"]);
        }
        inline virtual void associateI(const Json::Value &request, Json::Value &response)
        {
            response = this->associate(request["action"].asString(), request["guest"], request["host"]);
        }
        inline virtual void disassociateI(const Json::Value &request, Json::Value &response)
        {
            response = this->disassociate(request["action"].asString(), request["guest"], request["host"]);
        }
        inline virtual void dump2JSONI(const Json::Value &request, Json::Value &response)
        {
            response = this->dump2JSON(request["action"].asString(), request["class"].asString(), request["object"].asString());
        }
        virtual Json::Value dumpAll(const std::string& action) = 0;
        virtual Json::Value move(const std::string& action, const Json::Value& object) = 0;
        virtual Json::Value associate(const std::string& action, const Json::Value& guest, const Json::Value& host) = 0;
        virtual Json::Value disassociate(const std::string& action, const Json::Value& guest, const Json::Value& host) = 0;
        virtual Json::Value dump2JSON(const std::string& action, const std::string& class, const std::string& object) = 0;
};

#endif //JSONRPC_CPP_STUB_EE1520BUSSERVER_H_
